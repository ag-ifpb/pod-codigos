package ifpb;

import java.io.IOException;
import java.rmi.NotBoundException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.TimerTask;

public class GetResultTask extends TimerTask {
	private final MessageRepository repository;
	private final MessageResultRepository resultRepository;
	
	public GetResultTask(MessageRepository rep, MessageResultRepository result) {
		this.resultRepository = result;
		this.repository = rep;
	}

	@Override
	public void run() {
		try {
			Registry registry = LocateRegistry.getRegistry(10991);
			IReceiver receiver = (IReceiver) registry.lookup("Receiver");
			//
			List<Message> messages = repository.list();
			//
			List<Message> messagesCopy = new ArrayList<>();
			Collections.copy(messages, messagesCopy); 
			for (int i = 0; i < messagesCopy.size(); i++) {
				Message msg = messagesCopy.get(i);
				MessageResult result = receiver.result(msg.getId());
				if (result != null){
					resultRepository.add(result);
					repository.remove(msg);
				}
			}
		}
		catch(NotBoundException | IOException e){
			throw new RuntimeException(e);
		}
		
	}

}

package ag.proxyserver;

import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;

import ag.proxyserver.proxy.ProxyServerSocket;
import ag.proxyserver.reverse.ReverseServerSocket;
import ag.proxyserver.streamer.StreamBinderManager;

public class Main {
	
	public static void main(String[] args) throws IOException, InterruptedException {
		//log
		Logger.info("Inicializando o servidor proxy.");
		//instanciar os servidores
		ServerSocket serverSocket = new ServerSocket(10998);
		ServerSocket reverseServerSocket = new ServerSocket(10999);
		//
		StreamBinderManager manager = new StreamBinderManager();
		//proxy
		Thread tProxyServerSocket = new Thread(){
			public void run() {
				while(true){
					Socket socket = null;
					try {
						socket = serverSocket.accept();
						Logger.info("Recebendo uma conexão do controle.");
						ProxyServerSocket proxyServerSocket = new ProxyServerSocket(socket, manager);
						proxyServerSocket.start();
					}
					catch(IOException e){
						e.printStackTrace();
					}
					finally {
						if (socket != null){
							try {
								socket.close();
							} catch (IOException e) {
								e.printStackTrace();
							}
						}
					}
				}
			};
		};
		//for server
		//reverse
		Thread tReverseServerSocket = new Thread(){
			public void run() {
				while(true){
					Socket socket = null;
					try {
						socket = serverSocket.accept();
						Logger.info("Recebendo uma conexão da webcam.");
						ReverseServerSocket reverseServerSocket = new ReverseServerSocket(socket, manager);
						reverseServerSocket.start();
					}
					catch(IOException e){
						e.printStackTrace();
					}
					finally {
						if (socket != null){
							try {
								socket.close();
							} catch (IOException e) {
								e.printStackTrace();
							}
						}
					}
				}
			};
		};
		//
		tProxyServerSocket.start();
		tReverseServerSocket.start();
		//
		tProxyServerSocket.join();
		tReverseServerSocket.join();
		//
		serverSocket.close();
		reverseServerSocket.close();
	}

}

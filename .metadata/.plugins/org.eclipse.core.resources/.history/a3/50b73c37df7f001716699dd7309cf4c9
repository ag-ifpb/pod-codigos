import java.nio.ByteBuffer;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.security.spec.InvalidKeySpecException;
import java.util.Base64;
import java.util.Base64.Encoder;

import javax.crypto.BadPaddingException;
import javax.crypto.Cipher;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.SecretKey;
import javax.crypto.SecretKeyFactory;
import javax.crypto.spec.DESKeySpec;
import javax.crypto.spec.SecretKeySpec;

public class DESDecoder {

	public static void main(String[] args) throws NoSuchAlgorithmException, 
			InvalidKeySpecException, NoSuchPaddingException, 
			InvalidKeyException, IllegalBlockSizeException, BadPaddingException  {
		//
		ByteBuffer buffer = ByteBuffer.allocate(8);
		buffer.put("654321".getBytes());
		buffer.put((byte)0);
		buffer.put((byte)0);
		//
		//SecretKeySpec secretKeySpec = new SecretKeySpec(buffer.array(), "DES");
		//DESKeySpec keySpec = (DESKeySpec) factory.getKeySpec(secretKeySpec, DESKeySpec.class);
		SecretKeyFactory factory = SecretKeyFactory.getInstance("DES");
		DESKeySpec keySpec = new DESKeySpec(buffer.array());
		SecretKey secretKey = factory.generateSecret(keySpec);
		//
		Cipher cipher = Cipher.getInstance(secretKey.getAlgorithm());
		cipher.init(Cipher.ENCRYPT_MODE, secretKey);
		//
		byte[] ciphed = cipher.doFinal("bzaqz anl!".getBytes());
		//
		Encoder encoder = Base64.getEncoder();
		byte[] encoded = encoder.encode(ciphed);
		//
		System.out.println(new String(encoded));
	}
}

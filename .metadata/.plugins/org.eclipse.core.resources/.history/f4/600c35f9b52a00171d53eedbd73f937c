package ag.proxyserver.proxy.impl;

import java.io.InputStream;

import ag.proxyserver.Commander;
import ag.proxyserver.PlayCallback;
import ag.proxyserver.WebCamCodeGenerator;
import ag.proxyserver.WebCamCodeRepository;
import ag.proxyserver.WebCamException;
import ag.proxyserver.webcam.reverse.WebCamProxyServer;

public class WebCamProxyServerImpl implements WebCamProxyServer {

	@Override
	public String register(String oldCode) throws WebCamException {
		//
		if (oldCode == null){
			String newCode = WebCamCodeGenerator.code();
			WebCamCodeRepository.add(newCode);
			return newCode;
		}
		//
		if (!WebCamCodeRepository.exists(oldCode)){
			throw new WebCamException(2002, "CÃ³digo inexistente.");
		}
		//
		return oldCode;
	}

	@Override
	public String awaitCommand() throws WebCamException {
		//
		
		//criar um server
		return commander.command();
	}

	@Override
	public void transferStreamToProxy(int byteStream) throws WebCamException {
		playCallback.callback(byteStream);
	}

}

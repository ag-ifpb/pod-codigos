import java.math.BigInteger;
import java.nio.ByteBuffer;
import java.security.AlgorithmParameterGenerator;
import java.security.InvalidKeyException;
import java.security.Key;
import java.security.KeyFactory;
import java.security.KeyStore.SecretKeyEntry;
import java.security.NoSuchAlgorithmException;
import java.security.PrivateKey;
import java.security.SecureRandom;
import java.security.Security;
import java.security.spec.AlgorithmParameterSpec;
import java.security.spec.EncodedKeySpec;
import java.security.spec.InvalidKeySpecException;
import java.util.Arrays;
import java.util.Base64;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;

import javax.crypto.BadPaddingException;
import javax.crypto.Cipher;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.KeyGenerator;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.SecretKey;
import javax.crypto.SecretKeyFactory;
import javax.crypto.spec.DESKeySpec;
import javax.crypto.spec.SecretKeySpec;

public class DESDecoder {

	public static void main(String[] args) throws NoSuchAlgorithmException, NoSuchPaddingException,
			InvalidKeySpecException, InvalidKeyException, IllegalBlockSizeException, BadPaddingException {
		//
		ByteBuffer buffer = ByteBuffer.allocate(8);
		buffer.put((byte)0);
		buffer.put((byte)0);
		buffer.put("654321".getBytes());
//		Char('6');
//		buffer.putChar('5');
//		buffer.putChar('4');
//		buffer.putChar('3');
//		buffer.putChar('2');
//		buffer.putChar('1');
		//buffer.putInt(654321);
		//
		SecretKeySpec keySpec = new SecretKeySpec(buffer.array(), "DES");
		//
		System.out.println("Algoritmo: " + keySpec.getAlgorithm());
		DESKeySpec desKeySpec = new DESKeySpec(buffer.array());
		//
		//System.out.println(keySpec.getEncoded());
		//
		SecretKeyFactory factory = SecretKeyFactory.getInstance(keySpec.getAlgorithm());
		SecretKey secretKey = factory.generateSecret(keySpec);
		//
		Cipher cipher = Cipher.getInstance("DES");
		keySpec.getAlgorithm();
		//Cipher cipher = Cipher.getInstance("DES/CBC/PKCS5Padding");
		//
		cipher.init(Cipher.ENCRYPT_MODE, secretKey);
		byte[] ciphed = cipher.doFinal("bzaqz anl!".getBytes());
		//
		Encoder encoder = Base64.getEncoder();
		byte[] encoded = encoder.encode(ciphed);
		//
		System.out.println(new String(encoded));
	}
}

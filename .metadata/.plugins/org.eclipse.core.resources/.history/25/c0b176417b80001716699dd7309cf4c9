package ag.ifpb.service;

import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

public abstract class Searcher {
	private final StrategyFactory strategyFactory;
	
	protected abstract EncriptionType nextType();
	
	protected int[] nextKeys(EncriptionType type){
		
	}
	
	public Searcher(StrategyFactory strategyFactory) {
		this.strategyFactory = strategyFactory;
	}
	
	public void start(String text){
		//setup - pode ser configur√°vel
		int iterMax = 1000000;
		int threMax = 10;
		//criando um pool de threads fixo 
		ExecutorService service = Executors.newFixedThreadPool(threMax);
		//iniciado as tarefas
		for (int cnt = 0; cnt < iterMax; cnt++) {
			//
			EncriptionType type = nextType();
			int[] ks = nextKeys(type);
			//
			Strategy strategy = strategyFactory.strategy(type);
			//
			Worker worker = new Worker(strategy, ks, text);
			service.execute(worker);
		}
	}
	
}

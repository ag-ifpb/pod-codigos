package ag.ifpb.chat.rmi.client;

import java.awt.Scrollbar;
import java.util.Scanner;

public class App {
	
	
	private static class Sender implements Runnable{
		private final RMIChatService service;
		private final Scanner scanner;
		private final String token;
		//
		public Sender(RMIChatService service, Scanner scanner, String token) {
			this.service = service;
			this.scanner = scanner;
			this.token = token;
		}
		//envio
		public void run() {
			while(true){
				System.out.print("[eu]:");
				String textOut = scanner.nextLine();
				service.sendMessage(token, textOut);
			}
		}
	}
	
	private static class Receiver implements Runnable{
		private final RMIChatService service;
		private final String token;
		
		public Receiver(RMIChatService service, String token) {
			this.service = service;
			this.token = token;
		}

		public void run() {
			while(true){
				//recebimento
				String[] textsIn = service.receiveMessage(token);
				System.out.println(String.format("[%s]: %s", textsIn[0], textsIn[1]));
			}
		}
	}
	
	public static void main(String[] args) {
		//declarações de variáveis
		Scanner scanner = new Scanner(System.in);
		//solicitar o usuário que digite o seu email
		System.out.println("Por favor, digite um email:");
		String email = scanner.nextLine();
		//fazer login no server
		RMIChatService service = new RMIChatServiceMock();
		String token = service.login(email);
		//paralelizar
		Sender sender = new Sender(service, scanner, token);
		Receiver receiver = new Receiver(service, token);
		//inicializar as threads
//		while(true){
//			//envio
//			System.out.print("[eu]:");
//			String textOut = scanner.nextLine();
//			service.sendMessage(token, textOut);
//			//recebimento
//			String[] textsIn = service.receiveMessage(token);
//			System.out.println(String.format("[%s]: %s", textsIn[0], textsIn[1]));
//		}
		//em paralelo:
		//	-aguardando o recebimento de mensagens
		//	---- caso ele receba uma mensagem, esta será impressa na tela
		//  -aguardando que o usuário digite uma mensagem
		//	---- 
	}
}

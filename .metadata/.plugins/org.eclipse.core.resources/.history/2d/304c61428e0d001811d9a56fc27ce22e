package ag.protocol.impl;

import java.util.Arrays;

import ag.protocol.Frame;
import ag.protocol.FrameUnmarshaller;
import ag.protocol.util.Util;

public class FrameUnmarshallerImpl implements FrameUnmarshaller {

	@Override
	public Frame unmarshal(byte[] f) {
		//resultado
		Frame frame = new Frame();
		//extrair apenas os dois primeiros bits no byte
		int first = f[0] & 0xC0;
		System.out.println("Frame:       \t0x" + first);
		int two = f[1];
		//verificar se é requisição
		int isReq = first & 0x80;
		if (isReq == 0x80){
			frame.setTypeAsResponse();
		} else {
			frame.setTypeAsRequest();
		}
		//verificar se é tipo texto
		int isText = first & 0x40;
		if (isText == 0x00){
			frame.setPayloadAsBinary();
		} else {
			frame.setPayloadAsText();
		}
		//capturando o tamanho
		System.out.println(first);
		int newfirst = (first & 0x3F) << 10;
		System.out.println(newfirst);
		int newtwo   = two  << 2;
		System.out.println(newtwo);
		int lenght = (newfirst |  newtwo) >> 6;
		//capturando o conteúdo
		byte[] content = Arrays.copyOfRange(f, 2, lenght);
		frame.setPayload(content);
		//
		return frame;
	}

}

package ag.protocol.impl;

import java.util.Arrays;

import ag.protocol.Frame;
import ag.protocol.FrameUnmarshaller;

public class FrameUnmarshallerImpl implements FrameUnmarshaller {

	@Override
	public Frame unmarshal(byte[] f) {
		//resultado
		Frame frame = new Frame();
		//extrair apenas os dois primeiros bits no byte
		int first = f[0];
		int two = f[1];
		//verificar se é requisição
		byte isReq = (byte) (first & 0xC0 & 0x80);
		if (isReq == 0x80){
			frame.setTypeAsResponse();
		} else {
			frame.setTypeAsRequest();
		}
		//verificar se é tipo texto
		byte isText = (byte) (first & 0xC0 & 0x40);
		if (isText == 0x00){
			frame.setPayloadAsBinary();
		} else {
			frame.setPayloadAsText();
		}
		//capturando o tamanho
		System.out.println(first);
		int newfirst = (first & 0x3F) << 10;
		System.out.println(newfirst);
		int newtwo   = two  << 2;
		int lenght = (newfirst |  newtwo) >> 6;
		System.out.println(lenght);
		if ((lenght & 0x8000) == 0x8000){//negativo
			lenght = 2 + (-1)*lenght;
		}
		//capturando o conteúdo
		byte[] content = Arrays.copyOfRange(f, 2, 2+lenght);
		frame.setPayload(content);
		//
		return frame;
	}

}

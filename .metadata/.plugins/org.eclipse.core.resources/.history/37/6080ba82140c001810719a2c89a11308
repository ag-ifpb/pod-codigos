package ag.protocol.impl;

import java.nio.ByteBuffer;

import ag.protocol.Frame;
import ag.protocol.FrameMarshaller;

public class FrameMarshallerImpl implements FrameMarshaller {

	@Override
	public byte[] marshal(Frame frame) {
		//colocar o valor no primeiro bit do byte
		int first = 0x00;
		if (!frame.isRequest()){//0 - req e 1 - resp
			first = 0x80; // 1000 0000
		}
		//colocar o valor no segundo bit do byte
		if (frame.isText()){//0 - b e 1 - t
			// 0100 0000 ->  0x40
			//operação é de AND ou de OR?
			first = 0x40 | first; //
		}
		//empurrar o first para criar espaço vazio
		first = first << 8;
		//colocar o valor no segundo byte
		int length = frame.getLength();
		length = length << 4; 
		//operar com OR
		int twobytes = first | length;
		//
		ByteBuffer buffer = ByteBuffer.allocate(frame.getLength()+2);
		buffer.putInt(twobytes);
		buffer.put(frame.getPayload());
		//
		return buffer.array();
	}

}
